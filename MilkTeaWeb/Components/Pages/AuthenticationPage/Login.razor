@page "/dangnhap"
@using MilkTea.Core.ViewModels
@using MilkTea.Services.UserServices
@using MilkTeaWeb.ViewModels
@inject IUserService UserService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

@code {
	private LoginViewModel loginModel = new LoginViewModel();
	private string errorMessage;

	private async Task HandleLogin()
	{
		try
		{
			var user = await UserService.AuthenticateAsync(loginModel);
			if (user != null)
			{
				var userDataList = new List<string> { user.Username, user.FullName, user.Role,
													  user.ShippingAddress, user.PhoneNumber, user.UserId.ToString()};
				var userDataJson = System.Text.Json.JsonSerializer.Serialize(userDataList);

				// Gọi JavaScript để lưu cookie
				await JSRuntime.InvokeVoidAsync("setCookie", "UserInfo", userDataJson, 30);

				NavigationManager.NavigateTo("/");
			}
			else
			{
				errorMessage = "Invalid username or password.";
			}
		}
		catch (Exception ex)
		{
			errorMessage = $"An error occurred: {ex.Message}";
		}
	}
}

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin" class="container mt-5 p-4 shadow-lg rounded bg-white" style="max-width: 400px;">
	<h2 class="text-center text-primary">Login</h2>
	<ValidationSummary class="alert alert-danger" />

	<div class="mb-3">
		<label for="username" class="form-label">Username:</label>
		<input id="username" class="form-control" @bind="loginModel.Username" />
		<ValidationMessage For="@(() => loginModel.Username)" class="text-danger" />
	</div>

	<div class="mb-3">
		<label for="password" class="form-label">Password:</label>
		<input id="password" type="password" class="form-control" @bind="loginModel.Password" />
		<ValidationMessage For="@(() => loginModel.Password)" class="text-danger" />
	</div>

	<button type="submit" class="btn btn-primary w-100">Login</button>

	@if (!string.IsNullOrEmpty(errorMessage))
	{
		<p class="mt-3 text-danger text-center">@errorMessage</p>
	}
</EditForm>
