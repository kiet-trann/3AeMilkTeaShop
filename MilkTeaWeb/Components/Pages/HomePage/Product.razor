@page "/sanpham"
@using MilkTea.Core.Pagination
@using MilkTea.Core.ViewModels
@inject NavigationManager NavigationManager
@inject MilkTea.Services.ProductServices.IProductService ProductService

@code {
	private PaginatingResult<ProductViewModel> products;
	private int currentPage = 1;
	private int pageSize = 6;

	protected override async Task OnInitializedAsync()
	{
		var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
		var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
		if (query.ContainsKey("pageIndex"))
		{
			currentPage = int.Parse(query["pageIndex"]);
		}
		await LoadProducts();
	}

	private async Task LoadProducts()
	{
		products = await ProductService.GetPaginatedProductsAsync(currentPage, pageSize);
	}
}

<div class="product-section">
	@if (products?.Items != null && products.Items.Any())
	{
		@foreach (var product in products.Items)
		{
			<div class="product-item">
				<img src="@product.ImageUrl" alt="@product.ProductName">
				<h4>@product.ProductName</h4>
				<p>@product.Description</p>
				<div class="price">
					@product.PriceS.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) VND
				</div>
			</div>
		}
	}
	else
	{
		<p>Không có sản phẩm nào.</p>
	}
</div>

<!-- Pagination -->
@if (products != null && products.TotalPages > 1)
{
	<nav aria-label="Page navigation">
		<ul class="pagination justify-content-center">
			@for (int i = 1; i <= products.TotalPages; i++)
			{
				<li class="page-item @(currentPage == i ? "active" : "")">
					<a class="page-link" href="/sanpham?pageIndex=@i">
						@i
					</a>
				</li>
			}
		</ul>
	</nav>
}
